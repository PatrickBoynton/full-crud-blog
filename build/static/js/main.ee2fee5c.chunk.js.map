{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["BlogPost","props","state","isEditing","title","post","text","handleInput","bind","handleEdit","e","this","setState","target","name","value","keyCode","console","log","editPost","type","onChange","onKeyUp","className","onClick","deletePost","Component","BlogList","posts","map","index","BlogForm","handleSubmit","event","addPost","preventDefault","onSubmit","htmlFor","id","App","push","originalPost","updatedTitle","updatedText","indexOf","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee2fee5c.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.css';\n\nclass BlogPost extends Component {\n  constructor(props) {\n     super(props);\n     this.state = {\n       isEditing: false,\n       title: this.props.post.title,\n       text: this.props.post\n     }\n\n     this.handleInput = this.handleInput.bind(this);\n     this.handleEdit = this.handleEdit.bind(this);\n  }\n  handleInput(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleEdit(e) {\n    if(e.keyCode === 13) {\n      console.log(this.state.title);\n      this.props.editPost(this.props.post, this.state.title, this.state.text)\n      this.setState({isEditing: false })\n    }\n  }\n  render() {\n    const post = this.props.post\n    return (<li>\n      {\n        this.state.isEditing\n        ?\n        <>\n        <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleInput} onKeyUp={this.handleEdit} />\n        <input type=\"text\" name=\"text\" value={this.state.text} onChange={this.handleInput} onKeyUp={this.handleEdit} />\n        </>\n        :\n        <section className=\"card\">\n          <h1>{post.title}</h1>\n          <p>{post.text}</p>\n        </section>\n      }\n      <div className=\"edit-buttons\">\n      <button onClick={() => this.setState({isEditing: !this.state.isEditing})}>Edit</button>\n      <button onClick={() => this.props.deletePost(post)}>Delete</button>\n      </div>\n      \n      </li>)\n  }\n}\n\n\nfunction BlogList(props) {\n  const posts = props.posts?.map((post, index) => (\n    <BlogPost key={index}\n              post={post}\n              editPost={props.editPost}\n              deletePost={props.deletePost}/>\n  ));\n  return (\n    <ul>\n      {posts}\n    </ul>\n  )\n}\n\nclass BlogForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: \"\",\n      text: \"\"\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  handleSubmit(event) {\n    this.props.addPost(this.state);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor=\"title\">Title</label>\n        <input type=\"text\" id=\"title\" name=\"title\" value={this.state.title} onChange={this.handleInput}/>\n\n        <label htmlFor=\"text\">Text</label>\n        <input type=\"text\" id=\"text\" name=\"text\" value={this.state.text} onChange={this.handleInput}/>\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addPost = this.addPost.bind(this);\n    this.editPost = this.editPost.bind(this);\n    this.deletePost = this.deletePost.bind(this);\n  }\n\n  componentDidMount() {\n    const posts = [];\n\n    this.setState({ posts });\n  }\n\n  addPost(post) {\n    const posts = [...this.state.posts];\n    posts.push(post);\n    this.setState({ posts });\n  }\n\n  editPost(originalPost, updatedTitle, updatedText) {\n    const posts = [...this.state.posts];\n    const index = posts.indexOf(originalPost);\n    posts[index].title = updatedTitle;\n    posts[index].text = updatedText;\n    this.setState({posts});\n  }\n\n  deletePost(post) {\n    const posts = [...this.state.posts];\n    const index = posts.indexOf(post);\n    posts.splice(index, 1);\n    this.setState({ posts });\n  }\n\n  render() {\n    return (<div className=\"App\">\n      <BlogForm addPost={this.addPost}/>\n      <BlogList posts={this.state?.posts}\n                editPost={this.editPost}\n                deletePost={this.deletePost}/>\n    </div>)\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}